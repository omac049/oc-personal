name: Deploy Portfolio & SEO Resource Center

on:
  push:
    branches: [main]
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ./node_modules
            ./seo-resources/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install main site dependencies
        run: |
          echo "Installing main site dependencies..."
          npm ci
          echo "Main site dependencies installed successfully ‚úÖ"

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Build Next.js main site
        run: |
          echo "Building Next.js main site..."
          npm run build
          echo "Main site build completed successfully ‚úÖ"

      - name: Install SEO Resources dependencies
        run: |
          echo "Installing SEO Resources dependencies..."
          cd seo-resources
          npm ci
          echo "SEO Resources dependencies installed successfully ‚úÖ"

      - name: Build SEO Resource Center
        run: |
          echo "Building SEO Resource Center..."
          cd seo-resources
          NODE_ENV=production npm run build
          echo "SEO Resource Center build completed successfully ‚úÖ"
          
          # Verify build output
          if [ -d "build" ]; then
            echo "Build directory exists ‚úÖ"
            ls -la build/
          else
            echo "‚ùå Build directory not found!"
            exit 1
          fi

      - name: Prepare combined deployment
        run: |
          echo "Creating combined site structure..."
          
          # Verify main site build exists (Next.js creates ./out directory)
          if [ ! -d "./out" ]; then
            echo "‚ùå Main site build directory ./out not found!"
            ls -la ./
            exit 1
          else
            echo "Main site build directory found ‚úÖ"
          fi
          
          # Create subdirectory for SEO resources
          mkdir -p ./out/seo-resources
          echo "Created SEO resources subdirectory ‚úÖ"
          
          # Verify SEO resources build exists
          if [ ! -d "./seo-resources/build" ]; then
            echo "‚ùå SEO resources build directory not found!"
            ls -la ./seo-resources/
            exit 1
          else
            echo "SEO resources build directory found ‚úÖ"
          fi
          
          # Copy SEO resources to subdirectory
          echo "Copying SEO resources to deployment directory..."
          cp -r ./seo-resources/build/* ./out/seo-resources/
          
          # Verify SEO resources were copied successfully
          if [ -f "./out/seo-resources/index.html" ]; then
            echo "SEO resources copied successfully ‚úÖ"
          else
            echo "‚ùå SEO resources copy failed!"
            ls -la ./out/seo-resources/
            exit 1
          fi
          
          # Show final deployment structure
          echo "Final deployment structure:"
          echo "Main site files:"
          ls -la ./out/*.html || echo "No HTML files in root"
          echo "SEO resources files:"
          ls -la ./out/seo-resources/*.html || echo "No HTML files in seo-resources"
          
          echo "üöÄ Combined deployment ready!"
          echo "üìç Main site: https://omar-corral.com"
          echo "üìö SEO Resource Center: https://omar-corral.com/seo-resources/"

      - name: Create .nojekyll file
        run: |
          echo "Creating .nojekyll file to disable Jekyll processing..."
          touch ./out/.nojekyll
          echo ".nojekyll file created ‚úÖ"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Deployment success notification
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üåê Main site: https://omar-corral.com"
          echo "üìö SEO Resource Center: https://omar-corral.com/seo-resources/"
